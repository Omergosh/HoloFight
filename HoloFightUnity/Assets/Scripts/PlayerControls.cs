//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""FightControls"",
            ""id"": ""93b27520-53e6-47c8-a4dc-590e51b3a2dd"",
            ""actions"": [
                {
                    ""name"": ""Up"",
                    ""type"": ""Value"",
                    ""id"": ""cec1bc3e-d2a0-443d-918b-40fb5e1b3ad9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Value"",
                    ""id"": ""fc37ec73-5784-4275-af7b-925cc8f26ec1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Value"",
                    ""id"": ""7cd30a44-f58a-45a1-8c29-0392c5e163af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Value"",
                    ""id"": ""ddf3551f-6491-4c22-bdb5-aa658edfcf0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AttackA"",
                    ""type"": ""Value"",
                    ""id"": ""b52c244e-64bb-4be9-8617-5764c167c840"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AttackB"",
                    ""type"": ""Value"",
                    ""id"": ""87760d4b-6875-4322-bebe-efea9e89221c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AttackC"",
                    ""type"": ""Value"",
                    ""id"": ""c80af3d6-de10-43e8-88e8-3251ab913b7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AssistD"",
                    ""type"": ""Value"",
                    ""id"": ""f691b13f-49cb-4067-b50b-b96d4c54efd6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""d51d4f81-3c50-49c5-970c-885b93328348"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""25a72bc9-e4d2-4c13-9f9f-7e51089a9518"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e60b4ab0-1605-405d-aec3-9398a9cc4b29"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.5)"",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03640d74-06ac-46d3-90ca-da0e2313fc23"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2289c4f-ddfc-4658-b454-435b977038a3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a6530d4-1721-4945-969d-e934447e2803"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""577415ce-736c-4d1a-bee6-35dfbaed34a5"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7c678f2-3c9e-40d2-8b57-734d7508a793"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c972fed1-3e94-4c28-9159-8be2c532541c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0916312c-4a74-4362-b4e6-10967af190a3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab6e1b8a-ac99-4f64-b4c2-8752d80821ff"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.4)"",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""048b6d2f-9830-42ea-b3e1-abd00b3de25e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccdc6a7a-5657-4468-a2a9-c7cef540ca26"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f31a076-d53d-434d-99ff-8b2e918f5fbb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1e79fb9-3009-403d-a0e9-be1431907677"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5992fc5-706f-4c17-a5a7-a36c8e8f7282"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""268dda30-8252-4ee1-b6ef-58569f43db00"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acd056dd-85a4-422d-a389-63cb663afd4f"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""AttackA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41f45025-f6d4-4cb2-a346-fa3d4a48717f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""AttackA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfb2da53-23d3-43b1-9e7f-57754b44191d"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""AttackA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98269eac-529c-4536-942d-a0bac92630b6"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""AttackB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d69f748-9938-4dae-96f6-403643170229"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""AttackB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""251064b2-ec1c-4d18-a1aa-ee6c9a33a0f8"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""AttackB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e25f412a-71ad-4d76-af2f-3ef3d88f5c12"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""AttackC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d239cafd-37f0-40d4-a2b0-abf7a7f3453f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""AttackC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c73d223c-a947-4832-8322-afe33313c954"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""AttackC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa4ad1cc-0126-4dfd-a742-16f9cbe43a1c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""AssistD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""988d0636-d1c4-4370-875f-d47387dd7598"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""AssistD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7893b9f8-5881-4571-a325-07d034fe2750"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""AssistD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fc47a08-76fe-4acf-98f1-45d606cafffa"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e1593f4-4c59-4454-856d-0267b2a84271"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7984268b-e095-4bf2-a433-3d0a9f5787df"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuActions"",
            ""id"": ""3da11f0e-b639-41a5-b56f-ae1ab30b2029"",
            ""actions"": [
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""37cc1081-8c64-42d4-9eaf-e676e5986dce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""117bbe69-7ce5-4aa3-bb9f-200e94e73a09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8eb5e59c-57a1-4719-958a-43eb5635a39a"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8bcbde1-cb06-463b-afa9-c386e9072f2f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc125ca3-f046-47a8-9319-a61f7220bc18"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2ccfa5b-f0c2-44a5-bc12-f12a7c09d4d4"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP1Scheme"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ee4f26e-9365-486c-b12e-b8e9a5b9e26a"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadScheme"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2b9b4df-9472-4288-b917-9d1afe14eebc"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardP2Scheme"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardP1Scheme"",
            ""bindingGroup"": ""KeyboardP1Scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamepadScheme"",
            ""bindingGroup"": ""GamepadScheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""KeyboardP2Scheme"",
            ""bindingGroup"": ""KeyboardP2Scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // FightControls
        m_FightControls = asset.FindActionMap("FightControls", throwIfNotFound: true);
        m_FightControls_Up = m_FightControls.FindAction("Up", throwIfNotFound: true);
        m_FightControls_Left = m_FightControls.FindAction("Left", throwIfNotFound: true);
        m_FightControls_Down = m_FightControls.FindAction("Down", throwIfNotFound: true);
        m_FightControls_Right = m_FightControls.FindAction("Right", throwIfNotFound: true);
        m_FightControls_AttackA = m_FightControls.FindAction("AttackA", throwIfNotFound: true);
        m_FightControls_AttackB = m_FightControls.FindAction("AttackB", throwIfNotFound: true);
        m_FightControls_AttackC = m_FightControls.FindAction("AttackC", throwIfNotFound: true);
        m_FightControls_AssistD = m_FightControls.FindAction("AssistD", throwIfNotFound: true);
        m_FightControls_Pause = m_FightControls.FindAction("Pause", throwIfNotFound: true);
        // MenuActions
        m_MenuActions = asset.FindActionMap("MenuActions", throwIfNotFound: true);
        m_MenuActions_Confirm = m_MenuActions.FindAction("Confirm", throwIfNotFound: true);
        m_MenuActions_Back = m_MenuActions.FindAction("Back", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FightControls
    private readonly InputActionMap m_FightControls;
    private IFightControlsActions m_FightControlsActionsCallbackInterface;
    private readonly InputAction m_FightControls_Up;
    private readonly InputAction m_FightControls_Left;
    private readonly InputAction m_FightControls_Down;
    private readonly InputAction m_FightControls_Right;
    private readonly InputAction m_FightControls_AttackA;
    private readonly InputAction m_FightControls_AttackB;
    private readonly InputAction m_FightControls_AttackC;
    private readonly InputAction m_FightControls_AssistD;
    private readonly InputAction m_FightControls_Pause;
    public struct FightControlsActions
    {
        private @PlayerControls m_Wrapper;
        public FightControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Up => m_Wrapper.m_FightControls_Up;
        public InputAction @Left => m_Wrapper.m_FightControls_Left;
        public InputAction @Down => m_Wrapper.m_FightControls_Down;
        public InputAction @Right => m_Wrapper.m_FightControls_Right;
        public InputAction @AttackA => m_Wrapper.m_FightControls_AttackA;
        public InputAction @AttackB => m_Wrapper.m_FightControls_AttackB;
        public InputAction @AttackC => m_Wrapper.m_FightControls_AttackC;
        public InputAction @AssistD => m_Wrapper.m_FightControls_AssistD;
        public InputAction @Pause => m_Wrapper.m_FightControls_Pause;
        public InputActionMap Get() { return m_Wrapper.m_FightControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FightControlsActions set) { return set.Get(); }
        public void SetCallbacks(IFightControlsActions instance)
        {
            if (m_Wrapper.m_FightControlsActionsCallbackInterface != null)
            {
                @Up.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnUp;
                @Left.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnLeft;
                @Down.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnDown;
                @Right.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnRight;
                @AttackA.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackA;
                @AttackA.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackA;
                @AttackA.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackA;
                @AttackB.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackB;
                @AttackB.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackB;
                @AttackB.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackB;
                @AttackC.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackC;
                @AttackC.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackC;
                @AttackC.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAttackC;
                @AssistD.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAssistD;
                @AssistD.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAssistD;
                @AssistD.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnAssistD;
                @Pause.started -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_FightControlsActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_FightControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @AttackA.started += instance.OnAttackA;
                @AttackA.performed += instance.OnAttackA;
                @AttackA.canceled += instance.OnAttackA;
                @AttackB.started += instance.OnAttackB;
                @AttackB.performed += instance.OnAttackB;
                @AttackB.canceled += instance.OnAttackB;
                @AttackC.started += instance.OnAttackC;
                @AttackC.performed += instance.OnAttackC;
                @AttackC.canceled += instance.OnAttackC;
                @AssistD.started += instance.OnAssistD;
                @AssistD.performed += instance.OnAssistD;
                @AssistD.canceled += instance.OnAssistD;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public FightControlsActions @FightControls => new FightControlsActions(this);

    // MenuActions
    private readonly InputActionMap m_MenuActions;
    private IMenuActionsActions m_MenuActionsActionsCallbackInterface;
    private readonly InputAction m_MenuActions_Confirm;
    private readonly InputAction m_MenuActions_Back;
    public struct MenuActionsActions
    {
        private @PlayerControls m_Wrapper;
        public MenuActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Confirm => m_Wrapper.m_MenuActions_Confirm;
        public InputAction @Back => m_Wrapper.m_MenuActions_Back;
        public InputActionMap Get() { return m_Wrapper.m_MenuActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActionsActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActionsActions instance)
        {
            if (m_Wrapper.m_MenuActionsActionsCallbackInterface != null)
            {
                @Confirm.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnConfirm;
                @Back.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnBack;
            }
            m_Wrapper.m_MenuActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
            }
        }
    }
    public MenuActionsActions @MenuActions => new MenuActionsActions(this);
    private int m_KeyboardP1SchemeSchemeIndex = -1;
    public InputControlScheme KeyboardP1SchemeScheme
    {
        get
        {
            if (m_KeyboardP1SchemeSchemeIndex == -1) m_KeyboardP1SchemeSchemeIndex = asset.FindControlSchemeIndex("KeyboardP1Scheme");
            return asset.controlSchemes[m_KeyboardP1SchemeSchemeIndex];
        }
    }
    private int m_GamepadSchemeSchemeIndex = -1;
    public InputControlScheme GamepadSchemeScheme
    {
        get
        {
            if (m_GamepadSchemeSchemeIndex == -1) m_GamepadSchemeSchemeIndex = asset.FindControlSchemeIndex("GamepadScheme");
            return asset.controlSchemes[m_GamepadSchemeSchemeIndex];
        }
    }
    private int m_KeyboardP2SchemeSchemeIndex = -1;
    public InputControlScheme KeyboardP2SchemeScheme
    {
        get
        {
            if (m_KeyboardP2SchemeSchemeIndex == -1) m_KeyboardP2SchemeSchemeIndex = asset.FindControlSchemeIndex("KeyboardP2Scheme");
            return asset.controlSchemes[m_KeyboardP2SchemeSchemeIndex];
        }
    }
    public interface IFightControlsActions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnAttackA(InputAction.CallbackContext context);
        void OnAttackB(InputAction.CallbackContext context);
        void OnAttackC(InputAction.CallbackContext context);
        void OnAssistD(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IMenuActionsActions
    {
        void OnConfirm(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
}
